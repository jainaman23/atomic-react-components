// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Carousel /> should render correctly 1`] = `
<Carousel
  autoplay={false}
  controls={false}
  dots={true}
  itemsPerSlide={1}
  responsive={Array []}
  slideAnimationTime={3000}
  slideTransitionTime={2000}
>
  <section
    className="carousel-wrapper"
  >
    <Component>
      <div
        className="carousel-section"
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="carousel-sliding-wrapper"
        >
          <Slide
            id={0}
            key=".0"
          >
            <div
              className="slide active"
            >
              TEst 1 
            </div>
          </Slide>
          <Slide
            id={1}
            key=".1"
          >
            <div
              className="slide"
            >
              TEst 3 
            </div>
          </Slide>
          <Slide
            id={2}
            key=".2"
          >
            <div
              className="slide"
            >
              TEst 4 
            </div>
          </Slide>
          <Slide
            id={3}
            key=".3"
          >
            <div
              className="slide"
            >
              TEst 2 
            </div>
          </Slide>
        </div>
      </div>
    </Component>
    <ListWrapper>
      <div
        className="carousel-dots"
      >
        <List>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "List-rp20fd-0",
                  "isStatic": false,
                  "lastClassName": "carOkM",
                  "rules": Array [
                    "margin:0 0 ",
                    [Function],
                    " 0;li{margin-bottom:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    ";",
                  ],
                },
                "displayName": "List",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "List-rp20fd-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <List
              ListType="ul"
              borderSeparator={false}
              className="List-rp20fd-0 carOkM"
              inheritedStyles=""
              inline={false}
              nested={false}
              noDefaultView={false}
              noMargin={false}
            >
              <ul
                borderSeparator={false}
                className="List-rp20fd-0 carOkM"
                inheritedStyles=""
                inline={false}
                nested={false}
                noDefaultView={false}
                noMargin={false}
              >
                <GetList>
                  <li
                    className="item active"
                    key="0"
                  >
                    <Button
                      className="icon"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className="icon"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-sc-1ccn477-0",
                              "isStatic": false,
                              "lastClassName": "cqzVbc",
                              "rules": Array [
                                "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                ";",
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-sc-1ccn477-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          ariaLabel=""
                          className="Button-sc-1ccn477-0 cqzVbc icon"
                          disabled={false}
                          elementLocator=""
                          inheritedStyles=""
                          onClick={[Function]}
                          primary={false}
                          secondary={false}
                          tertiary={false}
                          transparent={false}
                          type="button"
                          variation=""
                        >
                          <button
                            aria-label={null}
                            className="Button-sc-1ccn477-0 cqzVbc icon"
                            data-locator="button-button-"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                            variation=""
                          >
                            1
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </li>
                  <li
                    className="item"
                    key="1"
                  >
                    <Button
                      className="icon"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className="icon"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-sc-1ccn477-0",
                              "isStatic": false,
                              "lastClassName": "cqzVbc",
                              "rules": Array [
                                "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                ";",
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-sc-1ccn477-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          ariaLabel=""
                          className="Button-sc-1ccn477-0 cqzVbc icon"
                          disabled={false}
                          elementLocator=""
                          inheritedStyles=""
                          onClick={[Function]}
                          primary={false}
                          secondary={false}
                          tertiary={false}
                          transparent={false}
                          type="button"
                          variation=""
                        >
                          <button
                            aria-label={null}
                            className="Button-sc-1ccn477-0 cqzVbc icon"
                            data-locator="button-button-"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                            variation=""
                          >
                            2
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </li>
                  <li
                    className="item"
                    key="2"
                  >
                    <Button
                      className="icon"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className="icon"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-sc-1ccn477-0",
                              "isStatic": false,
                              "lastClassName": "cqzVbc",
                              "rules": Array [
                                "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                ";",
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-sc-1ccn477-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          ariaLabel=""
                          className="Button-sc-1ccn477-0 cqzVbc icon"
                          disabled={false}
                          elementLocator=""
                          inheritedStyles=""
                          onClick={[Function]}
                          primary={false}
                          secondary={false}
                          tertiary={false}
                          transparent={false}
                          type="button"
                          variation=""
                        >
                          <button
                            aria-label={null}
                            className="Button-sc-1ccn477-0 cqzVbc icon"
                            data-locator="button-button-"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                            variation=""
                          >
                            3
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </li>
                  <li
                    className="item"
                    key="3"
                  >
                    <Button
                      className="icon"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className="icon"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-sc-1ccn477-0",
                              "isStatic": false,
                              "lastClassName": "cqzVbc",
                              "rules": Array [
                                "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                " ",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                ";",
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-sc-1ccn477-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          ariaLabel=""
                          className="Button-sc-1ccn477-0 cqzVbc icon"
                          disabled={false}
                          elementLocator=""
                          inheritedStyles=""
                          onClick={[Function]}
                          primary={false}
                          secondary={false}
                          tertiary={false}
                          transparent={false}
                          type="button"
                          variation=""
                        >
                          <button
                            aria-label={null}
                            className="Button-sc-1ccn477-0 cqzVbc icon"
                            data-locator="button-button-"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                            variation=""
                          >
                            4
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </li>
                </GetList>
              </ul>
            </List>
          </StyledComponent>
        </List>
      </div>
    </ListWrapper>
  </section>
</Carousel>
`;
